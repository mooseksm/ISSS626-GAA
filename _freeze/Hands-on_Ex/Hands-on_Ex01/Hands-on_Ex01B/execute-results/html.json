{
  "hash": "979fc6dff96707ae1fd29133cc6473e9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 1B\"\nauthor: \"Kock Si Min\"\ndate: August 24, 2024\ndate-modified: \"last-modified\"\ntoc: true\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n# **Thematic Mapping and GeoVisualisation with R**\n\n## 1.1 Overview\n\nThematic mapping involves the use of map symbols to visualise selected properties of geographic features that are not naturally visible i.e. population, temperate, crime rate and property prices.\n\nGeovisualisation works by providing a geographical ideation to render a place, phenomenon or process visible. In this exercise, functional and truthful chloropleth maps will be plot using the [tmap ](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html)package.\n\n## 1.2 Getting Started\n\nIn this hands-on exercise, the key R package is the [tmap ](https://cran.r-project.org/web/packages/tmap/)package and the following packages:\n\n1.  [**readr**](https://readr.tidyverse.org/)[ ](#0)to import delimited text file\n2.  [**tidyr** ](https://tidyr.tidyverse.org/)for tidying data\n3.  [**dplyr** ](https://dplyr.tidyverse.org/)for wrangling data\n4.  [**sf** ](https://cran.r-project.org/web/packages/sf/index.html)to handle geospatial data\n\nThe first 3 packages above are part of the tidyverse package.\n\nThe packages are loaded with the following code chunk:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap,tidyverse,sf)\n```\n:::\n\n\n## 1.3 Importing Data into R\n\n### 1.3.1 The Data\n\nThe following datasets were used to create the chloropleth map:\n\n-   Master Plan 2014 Subzone Boundary (Web) (\"MP14_SUBZONE_WEB_PL\") from [data.gov.sg](https://data.gov.sg/) in ESRI shapefile format. This is geospatial data comprising the geographical boundary of Singapore at the planning subzone level, based on URA Master Plan 2014.\n\n-   Singapore Residents by Planning Area/Subzone, Age Group, Sex and Type of Dwelling, June 2011 to 2020 (\"*respopagesextod2011to2020.csv*\"), from [Department of Statistics, Singapore](https://www.singstat.gov.sg/), in csv file format. This is an aspatial datafile, it does not contain any coordinates to the \"MP14_SUBZONE_WEB_PL\" shapefile.\n\n### 1.3.2 Importing Geospatial Data\n\nThe following code chunk uses the *st_read()* function of **sf** package to import `MP14_SUBZONE_WEB_PL` shapefile as a simple feature data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn=\"data/geospatial\",\n                layer=\"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\mooseksm\\ISSS626-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nThe content of mpsz can be examined using the code below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n```\n\n\n:::\n:::\n\n\n### 1.3.3 Importing attribute data into R\n\nThe *read_csv()* function of **readr** package is used to import *respopagesextod2011to2020.csv* file and saved as a data frame calledÂ *popdata*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n```\n:::\n\n\n### 1.3.4 Data Preparation\n\nA data table with year 2020 values, comprising variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY is first prepared.\n\n-   YOUNG: age group 0 to 4 until age group 20 to 24\n\n-   ECONOMY ACTIVE: age group 25-29 until age group 60-64\n\n-   AGED: age group 65 and above\n\n-   TOTAL: all age groups\n\n-   DEPENDENCY: the ratio between young and aged against economy active group\n\n#### 1.3.4.1 Data Wrangling\n\nThe following data wrangling and transformation functions will be used:\n\n-   *pivot_wider()* of **tidyr** package, and\n\n-   *mutate()*, *filter()*, *group_by()* and *select()* of **dplyr** package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA,SZ,AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup() %>%\n  pivot_wider(names_from=AG,\n              values_from=POP) %>%\n  mutate(`YOUNG` = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\n           rowSums(.[13:15])) %>%\n  mutate(`AGED`=rowSums(.[16:21])) %>%\n  mutate(`TOTAL`=rowSums(.[3:21])) %>%\n  mutate(`DEPENDENCY`=(`YOUNG`+`AGED`)/`ECONOMY ACTIVE`) %>%\n  select(`PA`,`SZ`,`YOUNG`,`ECONOMY ACTIVE`,`AGED`,`TOTAL`,`DEPENDENCY`)\n```\n:::\n\n\n#### 1.3.4.2 Joining the attribute data and geospatial data\n\nBefore georelational join can be performed, an added step is needed to convert the values in PA and SZ to uppercase, as they are currently in both upper- and lowercase. On the other hand, the SUBZONE_N and PLN_AREA_N are in uppercase.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA,SZ),\n            .funs = list(toupper)) %>%\n  filter(`ECONOMY ACTIVE`>0)\n```\n:::\n\n\nNext, *left_join()* of **dplyr** is used to join the geographical data and attribute table using planning subzone name i.e. SUBZONE_N and SZ as the common identifier:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2020 <- left_join(mpsz,popdata2020,by=c(\"SUBZONE_N\"=\"SZ\"))\n```\n:::\n\n\n*left_join()* of **dplyr** is used with the mpsz simple feature data frame as the left data table is used to ensure that the output will be a simple feature data frame.\n\nThe joined file is then saved:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mpsz_pop2020,\"data/rds/mpszpop2020.rds\")\n```\n:::\n\n\n## 1.4 Choropleth Mapping Geospatial Data using *tmap*\n\nChoropleth mapping involves the symbolisation of enumeration units such as countries, provinces, states, counties or census units, using area patterns or graduated colours. For instance, a social scientist may require a choropleth map to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary.\n\nTwo approaches are used to prepare the thematic map using *tmap*:\n\n-   Plotting a thematic map quickly using *qtm()*\n\n-    Plotting a highly customisable thematic map using tmap elements\n\n### 1.4.1 Plotting a choropleth map quickly using *qtm()*\n\n*qtm()* is a concise way to provide a good default visualisation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020,\n    fill=\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nLearning points:\n\n-   *tmap_mode()* with \"plot\" option is used to produce a static map. For interactive mode, \"view\" option should be used\n\n-   *fill* argument is used to map the attribute i.e. DEPENDENCY\n\n### 1.4.2 Creating a choropleth map using *tmap* elements\n\nThe disadvantage of *qtm()* is that the aesthetics of individual layers are harder to control. *tmap* drawing elements are required to draw a high quality cartographic choropleth map:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dependency ratio\")+\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha=0.5)+\n  tm_compass(type=\"8star\",size=2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2) +\n  tm_credits(\"Source: Planning subzone boundary from Urban Redevelopment Authority (URA) and population data from Department of Statistics (DOS)\",\n          position = c(\"left\",\"bottom\")   )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThe following section explains the tmap functions that were used to plot the above elements:\n\n### 1.4.2.1 Drawing a base map\n\nThe basic building block of **tmap** is *tm_shape()* followed by one or more layer elements such as *tm_fill()* or *tm_polygons()*\n\nIn the code chunk below, *tm_shape()* is used to define the input data and *tm_polygons()* is used to draw the planning subzone polygons:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### 1.4.2.2 Drawing a choropleth map using *tm_polygons()*\n\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as *Dependency* to *tm_polygons()*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nLearning points from *tm_polygons()*:\n\n-   default interval binning used to draw the choropleth map is called \"pretty\"\n\n-   default color scheme used is `YlOrRd`Â of ColorBrewer\n\n-   default color for missing value is a grey shade\n\n### 1.4.2.3 Drawing a choropleth map using *tm_fill()* and *tm_border()*\n\n*tm_polygons()* is a wrapper of *tm_fill()* and *tm_border()*:\n\n-   *tm_fill()* shades the polygons by using the default color scheme\n\n-   *tm_borders()* add the borders of the shapefile onto the choropleth map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nWith *tm_borders()*, light gray border lines are added onto the choropleth map:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")+\n  tm_borders(lwd = 0.1, alpha = 1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n-   *alpha* argument defines the transparency number between 0 (totally transparent) to 1 (not transparent). by default, the alpha value is 1\n\n-   *col* defines the border color\n\n-   *lwd* defines the border line width, default is 1\n\n-   *lty* defines the border line type, default is solid\n\n## 1.4.3 Data classification methods of tmap\n\nMost choropleth maps employ methods of data classification, which aims to take a large number of observations and group them into data ranges or classes.\n\n**tmap** provides 10 data classification methods, namely: *fixed, sd, equal, pretty* (default)*, quantile, kmeans, hclust, bclust, fisher* and *jenks.*\n\nThe style argument of tm_fill() or tm_polygons() will need to be used to define the data classification method.\n\n### 1.4.3.1 Plotting choropleth maps with built-in classification methods\n\nQuantile data classification with 5 classes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"quantile\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n*Equal* data classification method:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"equal\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n::: callout-warning\nComparing the two methods above, the distribution of the quantile method is more even than the equal distribution method. Maps can lie, below are some other methods of classification and different number of classes being tested out.\n:::\n\n*kmeans* data classification with 5 classes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"kmeans\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n*kmeans* data classification with 2 classes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=2,\n          style=\"kmeans\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n*fisher* data classification with 5 classes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"fisher\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n*fisher* data classification with 20 classes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=20,\n          style=\"fisher\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### 1.4.3.2 Plotting choropleth map with custom break\n\nFor all built-in styles, category breaks are computed internally. To override the defaults, the breakpoints can be set explicitly by means of *breaks* argument to *tm_fill()*.\n\n::: callout-important\nIn tmap, breaks include a minimum and maximum. To end up with n categories, n+1 elements must be specified in the *breaks* option (values must be in increasing order)\n:::\n\nBefore setting the break points, it is important and good practice to obtain the descriptive statistics:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz_pop2020$DEPENDENCY)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n```\n\n\n:::\n:::\n\n\nWith reference to the results above, we set the break points at 0.60, 0.70, 0.80 and 0.90. We also need to include a minimum and maximum, set at 0 and 1.00 respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks=c(0,0.60,0.70,0.80,0.90,1.00)) +\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## 1.4.4 Color scheme\n\n**tmap** support color ramps defined by the user or a set of predefined color ramps from the **RColorBrewer** package.\n\n### 1.4.4.1 Using ColorBrewer palette\n\nThis is done by assigning the preferred color to *palette* argument of *tm_fill()*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=6,\n          style=\"quantile\",\n          palette = \"Blues\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nTo reverse the color shading, we add a \"-\" prefix:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=6,\n          style = \"quantile\",\n          palette = \"-Blues\")+\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nThis also applies to other *palette* colors like Greens:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=6,\n          style = \"quantile\",\n          palette = \"Greens\")+\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=6,\n          style = \"quantile\",\n          palette = \"-Greens\")+\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n## 1.4.5 Map Layouts\n\nMap layout refers to the combination of all map elements into a cohesive map. Map elements include title, scale bar, compass, margins and aspect ratios. [1.4.3 Data classification methods of tmap] and [1.4.4 Color scheme] covered above affect how the map looks.\n\n### 1.4.5.1 Map Legend\n\nLegend options include changing the placement, format and appearance of the legend:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style=\"jenks\",\n          palette = \"Blues\",\n          legend.hist = TRUE,\n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1)+\n  tm_layout(main.title=\"Distribution of Dependency Ratio by planning subzone \\n(Jenks Classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\",\"bottom\"),\n            frame = FALSE)+\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### 1.4.5.2 Map style\n\nA variety of layout settings that can be changed are called by using *tmap_style()*:\n\nClassic style:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\")+\n  tm_borders(alpha = 0.5)+\n  tmap_style(\"classic\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n### 1.4.5.3 Cartographic Furniture\n\n**tmap** also provides arguments to draw other map furniture like compass, scale bar and grid lines i.e. through the use of *tm_compass(), tm_scale_bar() and tm_grid():*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"No. of persons\")+\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5)+\n  tm_compass(type = \"8star\",size=2)+\n  tm_scale_bar(width = 0.15)+\n  tm_grid(lwd = 0.1,alpha = 0.2)+\n  tm_credits(\"Source: Planning subzone boundary data from Urban Redevelopment Authority (URA) and Population Data from Department of Statistics (DOS)\",\n             position = c(\"left\",\"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nTo reset to default style:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"No. of persons\")+\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5)+\n  tm_compass(type = \"8star\",size=2)+\n  tm_scale_bar(width = 0.15)+\n  tm_grid(lwd = 0.1,alpha = 0.2)+\n  tm_credits(\"Source: Planning subzone boundary data from Urban Redevelopment Authority (URA) and Population Data from Department of Statistics (DOS)\",\n             position = c(\"left\",\"bottom\"))+\n  tmap_style(\"white\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n## 1.4.6 Drawing small multiple choropleth maps\n\nSmall multiple maps are also referred to as **facet maps** and comprise many maps arranged side-by-side and sometimes, stacked vertically. Facet maps enable the visualisation of how spatial relationships change with respect to another variable such as time.\n\nFacet maps can be plotted in 3 ways in tmap:\n\n-   by assigning multiple values to at least one of the aesthetic arguments\n\n-   by defining a group-by variable in *tm_facets()*\n\n-   by creating a multiple standalone maps with *tmap_arrange()*\n\n### 1.4.6.1 By assigning multiple values to at least one of the aesthetic arguments\n\nHere, we create facet maps by defining ***ncols*** in ***tm_fill()***:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\",\"AGED\"),\n          style = \"equal\",\n          palette = \"Blues\")+\n  tm_layout(legend.position = c(\"right\",\"bottom\"))+\n  tm_borders(alpha = 0.5)+\n  tmap_style(\"white\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\nAnother example, we assign different styles and palette:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\",\"quantile\"),\n          palette = list(\"Blues\",\"Greens\"))+\n  tm_layout(legend.position = c(\"right\",\"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n### 1.4.6.2 By defining a group-by variable in *tm_facets()*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0)+\n  tm_facets(by=\"REGION_N\",\n            free.coords = TRUE,\n            drop.shapes = TRUE)+\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\",\"center\"),\n            title.size = 20)+\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n### 1.4.6.3 By creating a multiple standalone maps with *tmap_arrange()*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoungmap <- tm_shape(mpsz_pop2020)+\n  tm_polygons(\"YOUNG\",\n              style = \"quantile\",\n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+\n  tm_polygons(\"AGED\",\n              style = \"quantile\",\n              palette = \"Blues\")\n\ntmap_arrange(youngmap,agedmap,asp=1,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n## 1.4.7 Mapping Spatial Object meeting a Selection Criterion\n\nInstead of creating small multiple choropleth map, a selection function can also be used to map spatial objects meeting a selection criterion:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\",])+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          legend.hist = TRUE,\n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1)+\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45,\n            legend.width = 5.0,\n            legend.position = c(\"right\",\"bottom\"),\n            frame = FALSE)+\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01B_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n## 1.5 References\n\n### 1.5.1 All about tmap package\n\n-   [tmap: Thematic Maps in R](https://www.jstatsoft.org/article/view/v084i06)\n\n-   [tmap](https://cran.r-project.org/web/packages/tmap/index.html)\n\n-   [tmap: get started!](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html)\n\n-   [tmap: changes in version 2.0](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-changes-v2.html)\n\n-   [tmap: creating thematic maps in a flexible way (useR!2015)](http://von-tijn.nl/tijn/research/presentations/tmap_user2015.pdf)\n\n-   [Exploring and presenting maps with tmap (useR!2017)](http://von-tijn.nl/tijn/research/presentations/tmap_user2017.pdf)\n\n### 1.5.2 Geospatial data wrangling\n\n-   [sf: Simple Features for R](https://cran.r-project.org/web/packages/sf/index.html)\n\n-   [Simple Features for R: StandardizedSupport for Spatial Vector Data](https://journal.r-project.org/archive/2018/RJ-2018-009/RJ-2018-009.pdf)\n\n-   [Reading, Writing and Converting Simple Features](https://cran.r-project.org/web/packages/sf/vignettes/sf2.html)\n\n### 1.5.3 Data wrangling\n\n-   [dplyr](https://dplyr.tidyverse.org/)\n\n-   [Tidy data](https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html)\n\n-   [tidyr: Easily Tidy Data with âspread()â and âgather()â Functions](https://cran.r-project.org/web/packages/tidyr/tidyr.pdf)\n",
    "supporting": [
      "Hands-on_Ex01B_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}