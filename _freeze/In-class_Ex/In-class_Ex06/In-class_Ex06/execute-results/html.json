{
  "hash": "44310b3c67cbc4513d2cef13d3a8330b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 6\"\nauthor: \"Kock Si Min\"\ndate: September 30, 2024\ndate-modified: \"last-modified\"\ntoc: true\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n# In-class Exercise 6 - Emerging Hot Spot Analysis\n\n## 6.1 Installing and loading the R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf,tidyverse,sfdep,tmap,plotly,Kendall)\n```\n:::\n\n\n## 6.2 The data\n\n-   Hunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\n\n\n```{=html}\n<!-- -->\n```\n\n-   Hunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\nIn this section, we will bring a geospatial data and its associated attribute table into R environment. The geospatial data is in ESRI shapefile format and the attribute table is in csv fomat.\n\n### 6.2.1 Import shapefile into R environment\n\nThe code chunk below uses [`st_read()`](https://r-spatial.github.io/sf/reference/st_read.html) of **sf** package to import Hunan shapefile into R. The imported shapefile will be a **simple features** **object** of **sf**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `C:\\mooseksm\\ISSS626-GAA\\In-class_Ex\\In-class_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nWe note that the simple features data has a polygon geometry and has 88 features and 7 fields. It is in WGS84 geographic coordinate system.\n\n### 6.2.2 Import csv file into R environment\n\nNext, we will import *Hunan_GDPPC.csv* into R using [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.html) of readr package. The output is in R data frame class.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC <- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n```\n:::\n\n\n### 6.2.3 Creating a time series cube\n\nWe use [spacetime()](https://sfdep.josiahparry.com/articles/spacetime-s3.html) of sfdep to create a spatio-temporal cube:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC_st <- spacetime(GDPPC,hunan,\n                      .loc_col = \"County\",\n                      .time_col = \"Year\")\n```\n:::\n\n\n-   the above code explicitly indicates which attribute is spatial (\".loc_col\") and which attribute is the time (\".time_col\")\n\n-   note that cannot use original time or date field as its in continuous form and might not be integer i.e. cannot use real number/number that have decimal places, hence prior to this step, might need to explicitly **convert date into integer** (via lubridate) or rmb to drop away the date to have continuous day, month, year indicator.\n\n-   **cannot use this method if boundary change** i.e. those phenomena with dynamic space such as flooding that cover a large area then recede to cover smaller area, what can be changed are attributes i.e. occurrences of accidents - as long as hexagon remain the same.\n\n::: callout-note\nNote this step for Take-home Exercise 2\n:::\n\nWe use the following code chunk to verify if GDPPC_st is indeed a space-time cube object:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(GDPPC_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n-   It is always good practice to check via the above step\n\n-   Via the \"Environment\" tab, we note that GDPPC_st has several layers according to different time periods vs the original GDPPC file. However, this difference is not obvious when you click to open up the GDPPC_st file.\n\n## 6.3 Computing Gi\\*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC_nb <- GDPPC_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wt = st_inverse_distance(nb,\n                             geometry,\n                             scale = 1,\n                             alpha =1),\n    .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n\n-   we use mutate to create new columns\n\n-   G\\* statistics **need to use distance weights (either inverse or fixed)**\n\n-   **note that G\\* includes itself hence note the function \"include_self()\" as first-level container**\n\n-   geometry in st_inverse_distance is the centroid\n\n-   to have more distance decay, increase the alpha value\n\n-   note not to sort the data after applying set_nbs and set_wts cause it will change the sequence\n\nWe use the new columsn to manually calculate the local Gi\\* for each location. We can do this by grouping by Year and using local_gstar_perm() of sfdep package. Thereafter, we use unnest to \"flatten\" - unnest gi_star column of newly created gi_stars data.frame:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars <- GDPPC_nb %>%\n  group_by(Year) %>%\n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %>%\n  tidyr::unnest(gi_star)\n```\n:::\n\n\n## 6.4 Mann-Kendall Test\n\nPerform confirmatory analysis to test if observed pattern exhibit monotonic or non-monotonic trend\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>% \n  ungroup() %>% \n  filter(County == \"Changsha\") %>%\n  dplyr::select(County, Year, gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cbg,\n       aes(x=Year,\n           y=gi_star))+\n  geom_line()+\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n-   need 12 years of data?\n\n-   can also utilise ggplotly to plot an interactive version below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(cbg,\n            aes(x=Year,\n                y=gi_star))+\n  geom_line()+\n  theme_light()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f3ea8e33cb51f331dd6a\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f3ea8e33cb51f331dd6a\">{\"x\":{\"data\":[{\"x\":[2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[5.0282995066289047,5.1692011079782345,5.2958892892912894,5.6039537096873993,6.2788862246004742,5.9357455762937326,5.7508709054298892,5.6942475830114576,5.7085054237054784,5.7608121561733521,6.097127241257188,6.0036547779673146,6.2028053540357906,6.0371816202738318,6.579432171885526,5.7669155664195504,5.7486534794156494],\"text\":[\"Year: 2005<br />gi_star: 5.028300\",\"Year: 2006<br />gi_star: 5.169201\",\"Year: 2007<br />gi_star: 5.295889\",\"Year: 2008<br />gi_star: 5.603954\",\"Year: 2009<br />gi_star: 6.278886\",\"Year: 2010<br />gi_star: 5.935746\",\"Year: 2011<br />gi_star: 5.750871\",\"Year: 2012<br />gi_star: 5.694248\",\"Year: 2013<br />gi_star: 5.708505\",\"Year: 2014<br />gi_star: 5.760812\",\"Year: 2015<br />gi_star: 6.097127\",\"Year: 2016<br />gi_star: 6.003655\",\"Year: 2017<br />gi_star: 6.202805\",\"Year: 2018<br />gi_star: 6.037182\",\"Year: 2019<br />gi_star: 6.579432\",\"Year: 2020<br />gi_star: 5.766916\",\"Year: 2021<br />gi_star: 5.748653\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2004.2,2021.8],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"tickvals\":[2005,2010,2015,2020],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[4.9507428733660737,6.656988805148357],\"tickmode\":\"array\",\"ticktext\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\"],\"tickvals\":[5,5.5,6,6.5],\"categoryorder\":\"array\",\"categoryarray\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"5a2c2dfc47e2\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"5a2c2dfc47e2\",\"visdat\":{\"5a2c2dfc47e2\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n### 6.4.1 Printing Mann-Kendall Report\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 0.485 0.00742    66  136.  589.\n```\n\n\n:::\n:::\n\n\n-   sl is the p-value. with reference to the above results (sl = \\~0.00742) which is less than 0.05, we will reject the hypothesis at 95% confidence level and infer that there's a slight upward trend (tau = \\~0.485).\n\n### 6.4.2 Mann-Kendall test data.frame\n\nWe can replicate this for each location using group_by() of dplyr package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- gi_stars %>%\n  group_by(County) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n\nhead(ehsa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  County        tau        sl     S     D  varS\n  <chr>       <dbl>     <dbl> <dbl> <dbl> <dbl>\n1 Anhua      0.191  0.303        26  136.  589.\n2 Anren     -0.294  0.108       -40  136.  589.\n3 Anxiang    0      1             0  136.  589.\n4 Baojing   -0.691  0.000128    -94  136.  589.\n5 Chaling   -0.0882 0.650       -12  136.  589.\n6 Changning -0.750  0.0000318  -102  136.  589.\n```\n\n\n:::\n:::\n\n\n-   note that not all County are statistically significant\n\n-   note that not all County are on the positive increasing trend, some are negative increasing trend\n\n### 6.4.3 Arrange to show significant hot/cold spots:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)\n\nemerging\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  County        tau         sl     S     D  varS\n  <chr>       <dbl>      <dbl> <dbl> <dbl> <dbl>\n1 Shuangfeng  0.868 0.00000143   118  136.  589.\n2 Xiangtan    0.868 0.00000143   118  136.  589.\n3 Xiangxiang  0.868 0.00000143   118  136.  589.\n4 Chengbu    -0.824 0.00000482  -112  136.  589.\n5 Dongan     -0.824 0.00000482  -112  136.  589.\n```\n\n\n:::\n:::\n\n\n### 6.4.4 Performing Emerging Hotspot Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nehsa <- emerging_hotspot_analysis(\n  x = GDPPC_st,\n  .var = \"GDPPC\",\n  k = 1,\n  nsim =99\n)\n\nehsa\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 88 × 4\n   location     tau    p_value classification     \n   <chr>      <dbl>      <dbl> <chr>              \n 1 Anxiang    0.221 0.232      sporadic coldspot  \n 2 Hanshou    0.147 0.434      sporadic hotspot   \n 3 Jinshi     0.441 0.0151     oscilating hotspot \n 4 Li        -0.824 0.00000482 sporadic coldspot  \n 5 Linli      0.118 0.537      oscilating hotspot \n 6 Shimen    -0.471 0.00946    oscilating coldspot\n 7 Liuyang    0.868 0.00000143 sporadic hotspot   \n 8 Ningxiang -0.559 0.00201    sporadic coldspot  \n 9 Wangcheng -0.162 0.387      sporadic coldspot  \n10 Anren      0.456 0.0120     sporadic coldspot  \n# ℹ 78 more rows\n```\n\n\n:::\n:::\n\n\n-   k=1 is yearly time interval\n\n## 6.5 Visualising the distribution of EHSA classes\n\nQuick overview:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ehsa,\n       aes(x=classification))+\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n-   usually visualise as a frequency plot, bar chart format\n\n-   did not sieve out statistically significant ones (can add a filter to get only statistically significant ones)\n\n## 6.6 Visualising EHSA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_ehsa <- hunan %>%\n  left_join(ehsa,\n            by = join_by(County == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig <- hunan_ehsa %>%\n  filter(p_value < 0.05)\n\ntmap_mode('plot')\ntm_shape(hunan_ehsa)+\n  tm_polygons()+\n  tm_borders(alpha = 0.5)+\n  tm_shape(ehsa_sig)+\n  tm_fill(\"classification\")+\n  tm_borders(alpha=0.4)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n-   read the interpretation of EHSA classes for definition/explanation\n\n-   even though Mann-Kendall and EHSA tests both provide tau and p-values, they are different. have to run both tests separately. **Mann-Kendall test provide quick overview while the final classification is based on the EHSA test. EHSA run permutations i.e. nsim = 99 to confirm the observations, provides more confidence.**\n",
    "supporting": [
      "In-class_Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}